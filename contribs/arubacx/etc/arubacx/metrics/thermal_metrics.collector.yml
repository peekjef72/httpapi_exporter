---
# cSpell:ignore mgmt, coredump, selftest, elmt -->

###
##
##
###

collector_name: arubacx_thermals
metric_prefix: arubacx_thermals

scripts:
  get stat_temperature:
    - name: collect thermal/temperature sensors stats
      query:
        url: /system/subsystems?depth=2&attributes=temp_sensors
        var_name: results
        # debug: true

    - name: proceed each elements from list
      with_items: $results
      loop_var: elmt
      when: >-
        js:
          elmt["temp_sensors"] != undefined && elmt.temp_sensors.length > 0
      actions:
        - name: loop tss
          with_items: $elmt.temp_sensors
          loop_var: ts
          actions:
            # - name: debug ts
            #   debug:
            #     msg: 'js: "ts: " + JSON.stringify( ts )'
            - name: build labels
              set_fact:
                key_labels:
                  name: $ts.name
                  # sn: $fan.identity.serial_number
            - name: fan status metric
              # by default scope is set to loop_var, here $ts; because we need $key_labels var
              # scope must be set to none
              scope: none
              metrics:
                - metric_name: status
                  help: "temperature sensor status: 0: not ok / 1: ok / 2: empty"
                  type: gauge
                  key_labels: $key_labels
                  values:
                    _: >-
                        js:
                          var res = 0
                          if( ts.status == "normal" ) { 
                            res = 1
                          } else if( ts.status == "empty" ) {
                            res = 2
                          }
                          res

                - metric_name: temperature
                  help: "temperature sensor in Celsius degrees"
                  type: gauge
                  key_labels: $key_labels
                  values:
                    _: 'js: $ts.temperature / 1000'
